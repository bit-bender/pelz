enclave
{
  from "sgx_tsgxssl.edl" import *;
  from "sgx_pthread.edl" import *;
  from "pelz_enclave.edl" import *;

  include "common_table.h"
  include "charbuf.h"

  trusted
  {
    public TableResponseStatus test_table_lookup(TableType type,
                                                 charbuf id,
                                                 [out] size_t *index);
    
    public int test_aes_keywrap_3394nopad_encrypt(
      size_t key_len,
      [in, size=key_len] unsigned char *key,
      size_t inData_len,
      [in, size=inData_len] unsigned char *inData,
      [out] size_t *outData_len,
      [out] unsigned char **outData);

    public int test_aes_keywrap_3394nopad_decrypt(
      size_t key_len,
      [in, size=key_len] unsigned char *key,
      size_t inData_len,
      [in, size=inData_len] unsigned char *inData,
      [out] size_t *outData_len,
      [out] unsigned char **outData);

    public int test_create_pelz_asn1_msg_helper(
      uint16_t test_msg_type,
      uint16_t test_req_type,
      size_t test_key_id_len,
      [in, size=test_key_id_len] unsigned char * test_key_id,
      size_t test_data_len,
      [in, size=test_data_len] unsigned char * test_data,
      size_t test_status_len,
      [in, size=test_status_len] unsigned char * test_status);

    public int test_parse_pelz_asn1_msg_helper(
      uint16_t test_msg_type,
      uint16_t test_req_type,
      size_t test_key_id_len,
      [in, size=test_key_id_len] unsigned char * test_key_id,
      size_t test_data_len,
      [in, size=test_data_len] unsigned char * test_data,
      size_t test_status_len,
      [in, size=test_status_len] unsigned char * test_status,
      uint8_t test_select);

    public int test_create_signed_data_msg_helper(
      size_t test_data_in_len,
      [in, size=test_data_in_len] uint8_t *test_data_in,
      size_t test_der_signer_cert_len,
      [in, size=test_der_signer_cert_len] const uint8_t *test_der_signer_cert,
      size_t test_der_signer_priv_len,
      [in, size=test_der_signer_priv_len] const uint8_t *test_der_signer_priv);

    public int test_verify_signature_helper(
      size_t test_data_in_len,
      [in, size=test_data_in_len] uint8_t *test_data_in,
      size_t test_der_signer_cert_len,
      [in, size=test_der_signer_cert_len] const uint8_t *test_der_signer_cert,
      size_t test_der_signer_priv_len,
      [in, size=test_der_signer_priv_len] const uint8_t *test_der_signer_priv,
      size_t test_der_ca_cert_len,
      [in, size=test_der_ca_cert_len] const uint8_t *test_der_ca_cert);
    
    public int test_der_encode_pelz_msg_helper(
      uint16_t test_msg_type,
      uint16_t test_req_type,
      size_t test_key_id_len,
      [in, size=test_key_id_len] unsigned char * test_key_id,
      size_t test_data_len,
      [in, size=test_data_len] unsigned char * test_data,
      size_t test_status_len,
      [in, size=test_status_len] unsigned char * test_status,
      uint8_t test_select);

    public int test_der_decode_pelz_msg_helper(
      uint16_t test_msg_type,
      uint16_t test_req_type,
      size_t test_key_id_len,
      [in, size=test_key_id_len] unsigned char * test_key_id,
      size_t test_data_len,
      [in, size=test_data_len] unsigned char * test_data,
      size_t test_status_len,
      [in, size=test_status_len] unsigned char * test_status,
      uint8_t test_select);
  };
};
