enclave
{
  from "sgx_tsgxssl.edl" import *;
  from "sgx_pthread.edl" import *;
  from "pelz_enclave.edl" import *;

  include "common_table.h"
  include "charbuf.h"
  include "test_defines.h"

  trusted
  {
    public TableResponseStatus test_table_lookup(TableType type,
                                                 charbuf id,
                                                 [out] size_t *index);
    
    public int test_aes_keywrap_3394nopad_encrypt(
      size_t key_len,
      [in, size=key_len] unsigned char *key,
      size_t inData_len,
      [in, size=inData_len] unsigned char *inData,
      [out] size_t *outData_len,
      [out] unsigned char **outData);

    public int test_aes_keywrap_3394nopad_decrypt(
      size_t key_len,
      [in, size=key_len] unsigned char *key,
      size_t inData_len,
      [in, size=inData_len] unsigned char *inData,
      [out] size_t *outData_len,
      [out] unsigned char **outData);

    public int pelz_enclave_msg_test_helper(
      uint8_t msg_type,
      uint8_t req_type,
      size_t cipher_size,
      [in, size=cipher_size] unsigned char *cipher,
      size_t tag_size,
      [in, size=tag_size] unsigned char *tag,
      size_t iv_size,
      [in, size=iv_size] unsigned char *iv,
      size_t key_id_size,
      [in, size=key_id_size] unsigned char *key_id,
      size_t msg_data_size,
      [in, size=msg_data_size] unsigned char *msg_data,
      size_t msg_status_size,
      [in, size=msg_status_size] unsigned char *msg_status,
      size_t der_sign_priv_size,
      [in, size=der_sign_priv_size] unsigned char *der_sign_priv,
      size_t der_verify_cert_size,
      [in, size=der_verify_cert_size] unsigned char *der_verify_cert,
      size_t der_encrypt_cert_size,
      [in, size=der_encrypt_cert_size] unsigned char *der_encrypt_cert,
      size_t der_decrypt_priv_size,
      [in, size=der_decrypt_priv_size] unsigned char *der_decrypt_priv,
      uint8_t test_select);

    public ReqTestStatus pelz_enclave_req_test_helper(
      charbuf cipher,
      charbuf key_id, 
      ReqTestSelect test_select);

    public ReqTestStatus pelz_enclave_service_test_helper(
      charbuf cipher,
      charbuf key_id,
      charbuf der_req_priv,
      charbuf der_req_cert,
      charbuf der_resp_priv,
      charbuf der_resp_cert);
  };
};

